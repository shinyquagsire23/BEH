/******************************************************************************
 * BEH                                                                        *
 * Source Code                                                                *
 *                                                                            *
 * D 2.067.0-0                                                                *
 * LZ77Test.d                                                                 *
 * "A small test for LZ77 functionality. Frankly needs to be purged from BEH" *
 *                                                                            *
 *                         This file is part of BEH.                          *
 *                                                                            *
 *       BEH is free software: you can redistribute it and/or modify it       *
 * under the terms of the GNU General Public License as published by the Free *
 *  Software Foundation, either version 3 of the License, or (at your option) *
 *                             any later version.                             *
 *                                                                            *
 *          BEH is distributed in the hope that it will be useful, but        *
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY *
 *   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public Licens  *
 *                             for more details.                              *
 *                                                                            *
 *  You should have received a copy of the GNU General Public License along   *
 *      with BEH.  If not, see <http://www.gnu.org/licenses/>.                *
 *****************************************************************************/
module GBAUtils.LZ77Test;

import GBAUtils.Lz77;
import GBAUtils.GBAImage;
import GBAUtils.PictureFrame;
import GBAUtils.Palette;
import GBAUtils.GBAImageType;
import std.stdio;
import std.algorithm;

public class LZ77Test
{
    public static ubyte[] ROM = [ 
        0x10, 0x00, 0x08,
        0x00, 0x3F, 0x00, 0x00, 0xF0,
        0x01, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0xF0, 0x01, 0xF0,
        0x01, 0xFF, 0xF0, 0x01, 0xF0,
        0x01, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0xF0, 0x01, 0xF0,
        0x01, 0xF0, 0x01, 0xFF, 0xF0,
        0x01, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0xF0, 0x01, 0xF0,
        0x01, 0xF0, 0x01, 0xF0, 0x01,
        0xFF, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0xF0, 0x01, 0xF0,
        0x01, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0xFF, 0xF0, 0x01,
        0xF0, 0x01, 0xF0, 0x01, 0xF0,
        0x01, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0xF0, 0x01, 0xFF,
        0xF0, 0x01, 0xF0, 0x01, 0xF0,
        0x01, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0xF0, 0x01, 0xF0,
        0x01, 0x28, 0x00, 0x30, 0xC0,
        0x0B, 0x53, 0x30, 0x03, 0x33,
        0x55, 0x00, 0x10, 0x33, 0x44,
        0x44, 0x00, 0x02, 0x44, 0x00,
        0x33, 0x33, 0xA0, 0x00, 0x0D,
        0x55, 0x00, 0x02, 0x45, 0x44,
        0x55, 0x55, 0x44, 0x64, 0x44,
        0x00, 0x02, 0x80, 0x01, 0x04,
        0x44, 0x00, 0x42, 0x33, 0x00,
        0x0D, 0x00, 0x43, 0x44, 0x22,
        0x10, 0x2C, 0xF0, 0x01, 0x04,
        0x10, 0x73, 0x9E, 0x00, 0x20,
        0x00, 0x44, 0x00, 0x47, 0x00,
        0x4E, 0xE0, 0x25, 0xD0, 0x93,
        0x02, 0xBD, 0x80, 0x03, 0x24,
        0xF0, 0xB0, 0xF0, 0x01, 0xF0,
        0x01, 0xD0, 0x01, 0x43, 0x80,
        0x03, 0xF6, 0x10, 0xEF, 0x90,
        0xF3, 0x10, 0x93, 0xE0, 0xB4,
        0x42, 0x80, 0x03, 0xF0, 0x01,
        0x33, 0x66, 0x22, 0xF0, 0x14,
        0x71, 0x14, 0x11, 0x11, 0xF1,
        0x09, 0xF0, 0x01, 0x44, 0x7F,
        0x34, 0x50, 0x03, 0x10, 0xE3,
        0x10, 0xE7, 0x90, 0xF7, 0xF0,
        0x01, 0xF0, 0x01, 0xF0, 0x01,
        0xD5, 0xF0, 0x01, 0x40, 0x0A,
        0x20, 0x00, 0x12, 0x52, 0x01,
        0xEA, 0x55, 0x30, 0x03, 0x5B,
        0x53, 0x10, 0x03, 0x45, 0x01,
        0xFA, 0x11, 0xBB, 0x43, 0x11,
        0xCF, 0x01, 0xDA, 0xF6, 0x30,
        0x03, 0xF0, 0xA8, 0xF0, 0xCB,
        0x91, 0x09, 0x43, 0xF0, 0x13,
        0x02, 0x32, 0x54, 0xF4, 0x10,
        0x52, 0x81, 0x2B, 0x50, 0xEB,
        0x12, 0x4E, 0x33, 0x02, 0x42,
        0x33, 0x45, 0x11, 0x44, 0x34,
        0x33, 0x00, 0x02, 0x33, 0x32,
        0x33, 0x02, 0x5C, 0xBF, 0x81,
        0xF7, 0x23, 0x80, 0x03, 0xF1,
        0x0B, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0x42, 0x7E, 0xDD,
        0xF0, 0x01, 0x52, 0x1C, 0x44,
        0x02, 0xDF, 0xF0, 0x21, 0x80,
        0x3D, 0x43, 0x02, 0xE3, 0xC7,
        0xF0, 0x21, 0x62, 0x3F, 0x33,
        0x22, 0x00, 0x00, 0x02, 0xF0,
        0x19, 0x40, 0x0A, 0x2F, 0x22,
        0x32, 0x00, 0x20, 0x22, 0xF0,
        0x20, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0xFF, 0xF0, 0x01,
        0xF0, 0x01, 0xF0, 0x01, 0xF0,
        0x01, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0xF0, 0x01, 0xFF,
        0xF0, 0x01, 0xF0, 0x01, 0xF0,
        0x01, 0xF0, 0x01, 0xF0, 0x01,
        0xF0, 0x01, 0xF0, 0x01, 0x10,
        0x01, 0x3E, 0x00 ];

    public static ubyte[] uncompressed = [ 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x30, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x53, 0x00,
        0x00, 0x33, 0x55, 0x00, 0x33, 0x44, 0x44, 0x33, 0x44, 0x44, 0x44,
        0x00, 0x33, 0x33, 0x00, 0x33, 0x55, 0x55, 0x33, 0x55, 0x55, 0x45,
        0x44, 0x55, 0x55, 0x44, 0x44, 0x55, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x04, 0x44, 0x00,
        0x00, 0x30, 0x33, 0x00, 0x00, 0x43, 0x44, 0x22, 0x33, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x04, 0x00, 0x00,
        0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x44, 0x33, 0x33, 0x00, 0x44,
        0x44, 0x44, 0x33, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
        0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00,
        0x00, 0x43, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x30, 0x00,
        0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x42, 0x44, 0x44, 0x44, 0x42, 0x44, 0x44, 0x44, 0x42,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x33,
        0x22, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x11, 0x11, 0x22, 0x33,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x34, 0x44, 0x44, 0x44, 0x34, 0x44, 0x44, 0x44, 0x34,
        0x24, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x20, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x30, 0x55, 0x00, 0x00,
        0x30, 0x55, 0x00, 0x00, 0x53, 0x55, 0x00, 0x00, 0x53, 0x45, 0x00,
        0x00, 0x30, 0x44, 0x00, 0x00, 0x30, 0x43, 0x55, 0x44, 0x44, 0x44,
        0x55, 0x45, 0x44, 0x44, 0x55, 0x45, 0x44, 0x44, 0x55, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x33, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x33, 0x43, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x54, 0x44, 0x44, 0x44, 0x55, 0x44, 0x44, 0x44, 0x44,
        0x44, 0x44, 0x33, 0x22, 0x44, 0x44, 0x44, 0x34, 0x44, 0x44, 0x44,
        0x34, 0x44, 0x44, 0x44, 0x33, 0x44, 0x44, 0x44, 0x33, 0x55, 0x44,
        0x44, 0x33, 0x45, 0x44, 0x34, 0x33, 0x44, 0x34, 0x33, 0x33, 0x32,
        0x33, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00,
        0x00, 0x23, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
        0x44, 0x33, 0x00, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33,
        0x43, 0x44, 0x00, 0x00, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x33, 0x22,
        0x00, 0x33, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x32, 0x33, 0x22,
        0x00, 0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ];

    static ubyte[] palette = [
        0x00, 0x00, 0xC6, 0x18, 0x2A, 0x5A,
        0xAE, 0x6A, 0x13, 0x77, 0x78, 0x7B,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00
    ];
    
    static string[] names = [ "grass", "grass2", "sand", "field", "sea", "pond", "craggy", "cave", "indoor", "indoor_rival", "indoor_2", "indoor_gym", "indoor_gym_leader", "indoor2", "indoor2_2", "indoor2_3", "indoor2_4", "indoor2_5", "indoor2_6", "indoor2_7"];
    
    static int[] offsets = [ 0x248400,
        0x24844C,
        0x2489A8,
        0x248C68,
        0x248F58,
        0x249074,
        0x2490C4,
        0x249620,
        0x2498DC,
        0x249E10,
        0x249F98,
        0x249FE4,
        0x24A37C,
        0x24A618,
        0x24A844,
        0x24A940,
        0x24A990,
        0x24ACD0,
        0x24AF70,
        0x24B0DC,
        0x24B19C,
        0x24B1EC,
        0x24B608,
        0x24B8A8,
        0x24BBE0,
        0x24BCE0,
        0x24BD38,
        0x24C07C,
        0x24C314,
        0x24C520,
        0x24C5D8,
        0x24C624,
        0x24C9B8,
        0x24CBF8,
        0x24CEC8,
        0x24CF98,
        0x24CFEC,
        0x24D418,
        0x24D6B8,
        0x24DC98,
        0x24DDF0,
        0x24DE34,
        0x24E16C,
        0x24E410,
        0x24E490,
        0x24E528,
        0x24E56C,
        0x24E5B8,
        0x24E604,
        0x24E650,
        0x24E6A4,
        0x24E6F0,
        0x24E740,
        0x24E78C,
        0x24E7DC,
        0x24E81C,
        0x24E858,
        0x24EB90,
        0x24EE34];
    
    static string[] names2 = ["grass_palette",
        "grass_tiles",
        "grass_tilemap",
        "grass_sliding_tiles",
        "grass_sliding_tilemap",
        "tall_grass_palette",
        "tall_grass_tiles",
        "tall_grass_tilemap",
        "tall_grass_sliding_tiles",
        "tall_grass_sliding_tilemap",
        "sand_palette",
        "sand_tiles",
        "sand_tilemap",
        "sand_sliding_tiles",
        "sand_sliding_tilemap",
        "field_palette",
        "field_tiles",
        "field_tilemap",
        "field_sliding_tiles",
        "field_sliding_tilemap",
        "sea_palette",
        "sea_tiles",
        "sea_tilemap",
        "sea_sliding_tiles",
        "sea_sliding_tilemap",
        "pond_palette",
        "pond_tiles",
        "pond_tilemap",
        "pond_sliding_tiles",
        "pond_sliding_tilemap",
        "craggy_palette",
        "craggy_tiles",
        "craggy_tilemap",
        "craggy_sliding_tiles",
        "craggy_sliding_tilemap",
        "cave_palette",
        "cave_tiles",
        "cave_tilemap",
        "cave_sliding_tiles",
        "cave_sliding_tilemap",
        "indoor_palette",
        "indoor_tiles",
        "indoor_tilemap",
        "indoor_sliding_tiles",
        "indoor_sliding_tilemap",
        "indoor_2_palette",
        "indoor_gym_palette",
        "indoor_gym_leader_palette",
        "indoor2_palette",
        "indoor2_2_palette",
        "indoor2_3_palette",
        "indoor2_4_palette",
        "indoor2_5_palette",
        "indoor2_6_palette",
        "indoor2_7_palette",
        "indoor_rival_palette",
        "indoor2_tiles",
        "indoor2_tilemap"];
    
    /*public static void main(string[] args) throws Exception
     {
     GBARom.loadRom();
     GBARom rom = ROMManager.getActiveROM();
     string s = rom.readPokeText(0,0xFF);
     System.out.print("unsigned char poketext[256] = { ");
     for(byte b : s.getBytes())
     {
     System.out.print(", " + "0x" + string.format("%02x", b & 0xff));
     }
     System.out.print("};");
     //File f = new File("/home/maxamillion/ROMHacking/Disassembly/FR/firered.asm");
     //Files.readAllBytes(path)
     
     /*for(int i = 0; i < offsets.length-1; i++)
     {
     byte[] stuffs = rom.readBytes(offsets[i], offsets[i+1] - offsets[i]);
     Path path = Paths.get(Integer.toHexstring(offsets[i]) + ".bin");
     Files.write(path, stuffs, StandardOpenOption.CREATE);
     }*/
    /*for(int i = 0; i <names2.length; i++)
     {
     string s = names2[i];
     string folder = s.split("_")[0];
     writefln(s + ":\t.incbin\"resources/battle/backgrounds/" + folder + "/" + s + ".bin");
     }*/
    /*writefln(rom.readPokeText(0x24F1A0));
     for(int i = 0; i < 0x4C; i++)
     writefln(rom.readPokeText());*/
    
    
    //CheckCompression();
    //}
    
    public static byte[] makeBytes(byte b, int reps)
    {
        byte[] arr = new byte[reps];
        for(int i = 0; i < reps; i++)
            arr[i] = b;
        return arr;
    }
    
    public static void CheckCompression()
    {
        writefln("Checking compression");
        ubyte[] decompressed =  Lz77.decompressLZ77(ROM, 0);
        bool broken = false;
        for(int i = 0; i < min(uncompressed.length, decompressed.length); i++)
        {
            if(decompressed[i] != uncompressed[i])
            {
                broken = true;
                break;
            }
            if(broken)
            {
                writefln("Decompression failed!");
                return;
            }			
        }
        writefln("Decompression success!");
        
        ubyte[] recompressed = Lz77.compressLZ77(decompressed);
        for(int i = 0; i < recompressed.length; i++)
        {
            if(recompressed[i] != ROM[i])
            {
                broken = true;
                break;
            }
            if(broken)
            {
                writefln("Recompression failed!");
                return;
            }
        }
        CreateImage(); 
        writefln("Recompression is identical to original!");
    }
    
    public static void CreateImage()
    {
        ubyte[] data = null;
        ubyte[] paldats = null;
        
        data = uncompressed;
        paldats = palette;
        //data = read("resources/ditto.img.bin");
        //paldats = read("resources/ditto.pal.bin");
        
        GBAImage g = new GBAImage(data, new Palette(GBAImageType.c16,paldats), 64, 64);	
        GBAImage backwards = GBAImage.fromImage(g.getPixbuf(), new Palette(GBAImageType.c16,paldats));
        
        new PictureFrame(g.getPixbuf());
        new PictureFrame(backwards.getPixbuf());
    }
}
